----------
          |
 TeamCity |
          |
-----------

Білд-сервер для забезпечення continius integration.

Continious integration — практика розробки ПЗ, яка заключається в постійному мерджу робочих копій в основну гілку розробки і запускання білду + автоматизованоо тесутвання для найшвидшого виявлення баг.
Continious delivery - практика, в якій будь-яка версія ПЗ готова до релізу у будь-який момент часу. Пакем доставляється до продакшину і там мануально рішають чи його деплоїти після перевірки.
Сontinious deployment - повністю автоматизований delivery & deployment on prod. Після доставки на прод пакету, він перевіряється автоматизованими тулами і якщо проходить то деплоється автоматично. Не потрібного мануального втручання.

---------
        |
 Docker |
        |
---------

Docker - інструмент для керування контейнерами.
Контейнеризація (віртуалізація на рівні операційної системи) - метод віртуалзації, який підтримує на рівні операційної системи декілька екземплярів простору користувача(контейнери),
які ідентичні операційній системі.
Екземпляри ізольовані і не впливають один на одного. Екземпляр простору може бути запущений тільки з тією же самою ОС, що і основна. Запускається контейнер зі всіма конфіграціями та збірками, які необхідні для роботи процесу.
Контейнер - це простір для ізолювання процесів від інших. У ньому процес бачить лиш нащадків.

Переваги:
Висока продуктивність за рахунок використання реального обладнення, а не віртуального.
Велика кількість контейнерів, що можуть бути запущеними, на відміну від апаратної віртуалізації.
Lightweight

Недоліки:
Контейнер не може використовувати відміну ОС від основної

Апаратна віртуалізація - метод віртуалізації, в якій поверх основної системи ставиться вірутальна копія ОС. Між основною ОС і віртуальною є шар HiperVisor,
який надає доступ до апаратного забезпечення основної ОС.

Переваги:
Створення ядра ОС відмінної від основної. Немає залежності від основного ядра

Віртуальна машина - емуляція простіру, в якому запущена копія ОС.

----------
          |
 Git Bash |
          |
----------

Термінальний застосунок, обгортка для взаємодії з Git через консольні команди.

git init
git clone https://github.com/libgit2/libgit2 myrepo
git remote add pb https://github.com/paulboone/ticgit
git remote -v
git remote show
git remote rename pb paul
$ git remote remove paul

git status
git add
git diff
git log

git commit
git fetch <remote>
git pull
git push <remote> <branch>

git branch <name> origin/name
git checkout <brench>
git rebase <name>
git merge <name>

Revert modyfied file git checkout -- filename

--------
        |
 GitHub |
        |
--------

Веб-сервіс для хостингу IT-проектів і їх спільної розробки.
Дозволя створити публічний або приватний репозиторій, при публічному можна дозволяти іншим форкнути репозиторій, зробити зміни і створювати пулл ріквести

------------
            |
 dotMemory  |
            |
------------

Аналізує використовування пам'яті в застосунках на .Net
Профайлер - інструмент для аналізу продуктивності
Профілювання - збіл характеристик роботи програми
Функції:
Збереження стану програми (снепшот)
Порівняння снепшотів
Перегляд об'єктів в кучі по генераціям
Перегляд посилань одного об'єкта на інший, де об'єкт був створений
Допомога з анлазіом, вбудоване виявлення проблем з пам'яттю

----------
          |
 Git Flow |
          |
----------

Модель бренчуваання

A develop branch is created from master
A release branch is created from develop
Feature branches are created from develop
When a feature is complete it is merged into the develop branch
When the release branch is done it is merged into develop and master
If an issue in master is detected a hotfix branch is created from master
Once the hotfix is complete it is merged to both develop and master

На відіміну від GitHub Flow, краще підходить для нечастих релізів(не щоденних по декілька разів)

-------------
             |
 GitHub Flow |
             |
-------------

Модель бренчування, яка використовуєтсья при великій кількості релізів вплоть до декількох разів на день
Від мастера створюєтсья фіча чи хотфікс бренча, після закінчення створюється пулл ріквест для оріджінал мастер, ревю, мердж, тестінг